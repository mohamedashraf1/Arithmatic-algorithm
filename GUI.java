/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arithmetic;

import static arithmetic.Arithmetic.Compress;
import static arithmetic.Arithmetic.Decompress;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author Elliot
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        jButton1.setText("compress");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Decompress");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    double value = 0;
    int length = 0;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String word = JOptionPane.showInputDialog(null,"Enter the word");
        value = Compress(word);
        length = word.length();
        JOptionPane.showMessageDialog(this, "value = " + value,"the compressed Value",JOptionPane.INFORMATION_MESSAGE);
        String prob = "";
        for(int i = 0 ; i < Arithmetic.myChars.size() ; i++){

            String freq = String.valueOf(Arithmetic.myChars.elementAt(i).getFreq());
            prob = prob + Arithmetic.myChars.elementAt(i).getSymbol() + "   " + freq + "\n" ;
        }
        JOptionPane.showMessageDialog(this,prob,"probabiliteis",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String word = Decompress(value,length);
        JOptionPane.showMessageDialog(this, "the original word is : " + word,"results",JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static Scanner sc=new Scanner(System.in);
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        System.out.println("for files press 1 for GUI press 2");
        int choice = sc.nextInt();
        if(choice == 1){
            String word = "";
            double value;
            //read the word for a file
            File file = new File("F:\\college\\third year\\first term\\Multimedia\\Assignments\\Arithmetic\\1-myfile.txt"); 
            BufferedReader br = new BufferedReader(new FileReader(file)); 
            String st; 
            while ((st = br.readLine()) != null){
                word += st;
            }

            value = Compress(word);
            String strValue = String.valueOf(value);


            //writing the output in a file
            FileWriter fw=new FileWriter("F:\\college\\third year\\first term\\Multimedia\\Assignments\\Arithmetic\\2-value.txt"); 
            fw.write(strValue); 
            fw.close(); 
            
            //writing the prob in a file
            String prob = "";
            for(int i = 0 ; i < Arithmetic.myChars.size() ; i++){
                
                String freq = String.valueOf(Arithmetic.myChars.elementAt(i).getFreq());
                prob = prob + Arithmetic.myChars.elementAt(i).getSymbol() + "   " + freq + "\n" ;
            }
            FileWriter fw2=new FileWriter("F:\\college\\third year\\first term\\Multimedia\\Assignments\\Arithmetic\\3-prob.txt"); 
            fw2.write(prob); 
            fw2.close();


            //reading the value from a file
            String STRvalue = "";
            File file2 = new File("F:\\college\\third year\\first term\\Multimedia\\Assignments\\Arithmetic\\2-value.txt"); 
            BufferedReader br2 = new BufferedReader(new FileReader(file2)); 
            String str; 
            while ((str = br2.readLine()) != null){
                STRvalue += str;
            }


            String word2 = Decompress(Double.parseDouble(STRvalue) , word.length());

            //write the final word after decompress
            FileWriter fw3=new FileWriter("F:\\college\\third year\\first term\\Multimedia\\Assignments\\Arithmetic\\4-compressed.txt"); 
            fw3.write(word2);
            fw3.close(); 
        }
        else{
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
